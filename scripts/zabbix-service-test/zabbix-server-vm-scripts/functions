#!/bin/bash
function check_ipaddr(){
  if [ $# -ne 1 ];then
    log_print "Agurement should be IP address."
    return 1
  fi
  ip=$1
  OLDIFS=${IFS} 
  IFS='.'
  ipaddr=($ip)
  IFS=${OLDIFS}
  if [ ${#ipaddr[@]} -ne 4 ];then
    log_print "$1 is not ip address."
    return 1
  fi
  for i in `seq 0 3`;do
   section=${ipaddr[$i]}
   [[ ${section} =~ ^-?[1-9][0-9]{0,2}$ ]] && [[ ${section} -lt 255 ]] || ([[ ${section} == 0 ]] && [[ $i != 0 ]] \
   && [[ $i != 3 ]]) || return 1
  done
  return 0
}

## Fuction check mysql connection

function check_mysql_conn(){

cat <<EON >/tmp/my.cnf
[client]
user = ${DBUser}
host = ${DBHost}
password = "${DBPassword}"
port = ${DBPort}
EON
mysql --defaults-file=/tmp/my.cnf -e "status" ${DBName} | tee -a ${log_file}
}

function analyze_ip_port(){
  if [ -z $1 ];then
    log_print "ip:port or ip should be args."
    return 1
  fi
  OLDIFS=${IFS}
  IFS=':'
  ipaddr=($1)
  IFS=${OLDIFS}
  if [ ${#ipaddr[@]} -gt 2 ];then
    log_print "ERROR format. IP:port or IP"
    return 1
  fi
  ip=${ipaddr[0]} 
  [[ "${ip}" == '0.0.0.0' ]] || check_ipaddr ${ip} || (log_print "ERROR: ip address ${ip}";return 1)
  port=${ipaddr[1]}
  [[ -z $port ]] || ([[ ${port} =~ ^-?[1-9][0-9]{0,}$ ]] && [[ ${port} -lt 65536 ]]) || (log_print "ERROR port:${port}";return 1)
  ListenIP=$ip
  ListenPort=${port:-10051}
}

function override_value(){
  conf=$1
  key=$2
  value=${!key}
  if [ ! -z ${value} ];then
    is_exists=$(cat ${conf}|grep "^${key}=.*" |wc -l)
    if [ $is_exists -ne 0 ];then
      sed -i -e 's/${key}=.*/${key}=${value}/g' ${conf}
    else
      sed -i "\$a ${key}=${value}" ${conf}
    fi
  fi
}

function log_print(){
  echo -n "`date +%Y-%m-%dT%H:%M:%S` " >>${log_file}
  echo "$*" | tee -a ${log_file}
}

function valid_passwd(){
  passwd=$1
  [[ ${#passwd} -ge 8 ]] || return 1
  [[ $(echo "$passwd" |grep "[A-Z]" |wc -l) -ne 0 ]] && [[ $(echo "$passwd" |grep "[a-z]" |wc -l) -ne 0 ]] && [[ $(echo "$passwd" |grep "[0-9]" |wc -l) -ne 0 ]] || return 1
}

function update_admin_passwd(){
  log_print "Default adminstrator username: Admin, password: zabbix."
  echo "Please change password for Admin. Ctrl + c will exit and keep default password."
  info="Please Note: Password should be at least 8 characters long with one digit, one lower case and one Upper case Alphabets"
  while [ 1 -eq 1 ];do
    echo $info
    read -p "Input password: " -s first_passwd 
    valid_passwd $first_passwd
    if [ $? -ne 0 ];then
      log_print "ERROR: Invalid password format."
      first_passwd=''
      continue
    fi
    echo ""
    read -p "Verify password: " -s second_passwd
    [[ "$first_passwd" == "$second_passwd" ]] && break || (log_print "ERROR: The second password doesn't match the first one.";first_passwd='';second_passwd='')
  done
  mysql --defaults-file=/tmp/my.cnf zabbix -e "update zabbix.users set passwd=md5(\"$second_passwd\") where alias='Admin'"
  if [ $? -ne 0 ];then
   log_print "Change default password failed. Please connect with haihangcloud administor or change password by web UI with default password login."
   return $?
  fi
  echo ""
  log_print "Change Admin password succeed."
}
